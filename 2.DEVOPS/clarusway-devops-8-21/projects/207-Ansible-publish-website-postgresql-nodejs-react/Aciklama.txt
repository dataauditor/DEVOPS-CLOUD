


Project:

AWS:
4 Redhat actik. (portlar: 22, 3000, 5000, 5432, 80)

VSC ansible:
sudo yum update -y
sudo yum install -y python3 
pip3 install --user ansible
  - ansible kurduk.

mkdir ansible
vim /ansible/ansible.cfg
------------------------------------------------------------- 
[defaults]
host_key_checking = False
inventory=inventory_aws_ec2.yml
interpreter_python=auto_silent
deprecation_warnings=False
private_key_file=/home/ec2-user/ugur.pem 
remote_user=ec2-user
-------------------------------------------------------------
  - inventory=inventory_aws_ec2.yml: '-i' kullanmamak icin yazilir. 
- ugur.pem tasidik ec2-user'a
chmod 400 ugur.pem 

Browser:
ec2 full access

VSC:
pip3 install --user boto3
vim /ansible/inventory_aws_ec2.yml
-------------------------------------------------------------
plugin: aws_ec2
regions:
  - "us-east-1"
filters:
  tag:stack: ansible_project
keyed_groups:
  - key: tags.Name
  - key: tags.environment
compose:
  ansible_host: public_ip_address
-------------------------------------------------------------
https://docs.ansible.com/ansible/latest/collections/amazon/aws/aws_ec2_inventory.html
  - plugini aciklar.
cd ansible/
ansible all -m ping -o

postgres altina init.sql kopyala
vim ansible-project/postgres/Dockerfile
-------------------------------------------------------------
FROM postgres
COPY ./init.sql /docker-entrypoint-initdb.d/
EXPOSE 5432
-------------------------------------------------------------
vim ansible-project/postgres/docker_postgre.yml
-------------------------------------------------------------
- name: configure postgresql
  hosts: _ansible_postgresql
  become: true
  vars_files:
    - secret.yml
  tasks:
    - name: update pkgs
      yum:
        name: "*"
        state: latest

    - name: Uninstall old versions
      yum:
        name: "{{ item }}"
        state: removed
      loop:
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-latest-logrotate
        - docker-logrotate
        - docker-engine

    - name: install yum-utils
      yum:
        name: yum-utils
        state: latest
      
    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker
      package:
        name: docker-ce
        state: latest

    - name: Install pip
      package: 
        name: python3-pip
        state: present
        
    - name: Install docker sdk
      pip:
        name: docker

    - name: add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: start docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: create build directory
      file:
        path: /home/ec2-user/postgresql
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: copy the sql script
      copy: 
        src: /home/ec2-user/ansible-project/postgres/init.sql
        dest: /home/ec2-user/postgresql

    - name: copy the dockerfile
      copy: 
        src: /home/ec2-user/ansible-project/postgres/Dockerfile
        dest: /home/ec2-user/postgresql 

    - name: remove container and image if exist
      shell: "docker ps -q --filter 'name=oliver_postgre' && docker stop oliver_postgre && docker rm -fv oliver_postgre && docker image rm -f olivercw/postgre || echo 'Not Found'"

    - name: build container image
      docker_image:
        name: olivercw/postgre
        build:
          path: /home/ec2-user/postgresql
        source: build
        state: present

    - name: create postgresql docker container
      docker_container:
        name: oliver_postgre
        image: olivercw/postgre
        state: started
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: "{{ password }}"
        volumes:
          - /db-data:/var/lib/postgresql/data
      register: container_info

    - name: print the container info
      debug:
        var: container_info
-------------------------------------------------------------
  - hosts: 'ansible-inventory --graph' komutu ile bakilir.
  - docker 
ansible-vault create secret.yml
#123
#123
-------------------------------------------------------------
password: Pp123456789
-------------------------------------------------------------
  - secret.yml olusturur.
ansible-playbook --ask-vault-pass docker_postgre.yml
#123
  - playbook'u calistirir.
ansible _ansible_postgresql -m shell -a "sudo docker ps -a"
  - containerleri gosterir.
vim ansible-project/nodejs/Dockerfile
-------------------------------------------------------------
- name: configure nodejs docker
  hosts: _ansible_nodejs
  become: true
  tasks: 
    - name: update packages
      yum: 
        name: "*"
        state: latest
    - name: Uninstall old versions
      yum:
        name: "{{ item }}"
        state: removed
      loop:
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-latest-logrotate
        - docker-logrotate
        - docker-engine

    - name: install yum-utils
      yum:
        name: yum-utils
        state: latest
      
    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker
      package:
        name: docker-ce
        state: latest

    - name: Install pip
      package: 
        name: python3-pip
        state: present
        
    - name: Install docker sdk
      pip:
        name: docker

    - name: add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: start docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: create build directory
      file:
        path: /home/ec2-user/nodejs
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: copy files to nodejs node
      copy: 
        src: /home/ec2-user/ansible-project/todo-app-pern/server/
        dest: /home/ec2-user/nodejs

    - name: copy the dockerfile
      copy: 
        src: /home/ec2-user/ansible-project/nodejs/Dockerfile
        dest: /home/ec2-user/nodejs

    - name: remove container and image if exist
      shell: "docker ps -q --filter 'name=oliver_nodejs' && docker stop oliver_nodejs && docker rm -fv oliver_nodejs && docker image rm -f olivercw/nodejs || echo 'Not Found'"

    - name: build container image
      docker_image:
        name: olivercw/nodejs
        build:
          path: /home/ec2-user/nodejs
        source: build
        state: present

    - name: create postgresql docker container
      docker_container:
        name: oliver_nodejs
        image: olivercw/nodejs
        state: started
        ports:
          - "5000:5000"
      register: container_info

    - name: print the container info
      debug:
        var: container_info
-------------------------------------------------------------




































