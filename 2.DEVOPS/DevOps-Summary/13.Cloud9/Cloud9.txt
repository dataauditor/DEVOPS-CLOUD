1.Cloud9 kurulumu:
> Create environment > Name: btcenvironment > next 
  > Environment type: Create a new EC2 instance for environment (direct access)
  > Instance type: t2.micro (1 GiB RAM + 1 vCPU)
  > Platform: Ubuntu Server 18.04 LTS > next > create environment
> Welcome > Editor Theme:Cloud9 Night > kapat
> Cloud9 > Preferences > font vb degisiklikler yapilabilir.

> btcenvironment > RC > New file > test (isimlendirdik)

Terminal (TR):
docker system prune -a
  - docker'i C9'dan kaldirdik.

Browser:
https://github.com/morethancertified/mtc-terraform/blob/main/extras/resiza.sh
  - Ilgili file'i kopyalayip terminalde calistiririz.

c9:
touch resize.sh
-----------------------------------------------------------
#!/bin/bash

# Specify the desired volume size in GiB as a command-line argument. If not specified, default to 20 GiB.
SIZE=${1:-20}

# Get the ID of the environment host Amazon EC2 instance.
INSTANCEID=$(curl http://169.254.169.254/latest/meta-data/instance-id)

# Get the ID of the Amazon EBS volume associated with the instance.
VOLUMEID=$(aws ec2 describe-instances \
  --instance-id $INSTANCEID \
  --query "Reservations[0].Instances[0].BlockDeviceMappings[0].Ebs.VolumeId" \
  --output text)

# Resize the EBS volume.
aws ec2 modify-volume --volume-id $VOLUMEID --size $SIZE

# Wait for the resize to finish.
while [ \
  "$(aws ec2 describe-volumes-modifications \
    --volume-id $VOLUMEID \
    --filters Name=modification-state,Values="optimizing","completed" \
    --query "length(VolumesModifications)"\
    --output text)" != "1" ]; do
sleep 1
done

#Check if we're on an NVMe filesystem
if [ $(readlink -f /dev/xvda) = "/dev/xvda" ]
then
  # Rewrite the partition table so that the partition takes up all the space that it can.
  sudo growpart /dev/xvda 1

  # Expand the size of the file system.
  # Check if we are on AL2
  STR=$(cat /etc/os-release)
  SUB="VERSION_ID=\"2\""
  if [[ "$STR" == *"$SUB"* ]]
  then
    sudo xfs_growfs -d /
  else
    sudo resize2fs /dev/xvda1
  fi

else
  # Rewrite the partition table so that the partition takes up all the space that it can.
  sudo growpart /dev/nvme0n1 1

  # Expand the size of the file system.
  # Check if we're on AL2
  STR=$(cat /etc/os-release)
  SUB="VERSION_ID=\"2\""
  if [[ "$STR" == *"$SUB"* ]]
  then
    sudo xfs_growfs -d /
  else
    sudo resize2fs /dev/nvme0n1p1
  fi
fi
-----------------------------------------------------------
  - browserdan alinan veri resize.sh'a kopyalandi.
  - root volume'un hacmini artirir. 20Gb yapar.
chmod +x resize.sh
sh resize.sh

Browser:
https://ipchicken.com/ 
  - kendi IP adresimizi verir.

AWS EC2:
> aws-cloud9-btcenv > Security > sg-05... > Edit inboud Rules > 
  > All TCP / Source: kendi IP adresim (ben 0.0.0.0/0 yaptim)

Browser:
> learn.hashicorp.com/tutorials/terraform/install-cli
  > Linux > Ubuntu/Debian > 
    - Buradaki kodlari sirasiyla terminalden yukleriz asagida oldugu gibi.

c9:
sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
sudo apt-get update && sudo apt-get install terraform
terraform --version































































