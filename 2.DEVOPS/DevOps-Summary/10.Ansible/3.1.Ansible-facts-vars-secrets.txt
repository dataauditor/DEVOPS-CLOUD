1.Genel:
https://clarusway.com/ansible-working-with-dynamic-inventory-using-aws-ec2-plugin/
https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#connecting-to-hosts-behavioral-inventory-parameters
  - inventory parameters web site
https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#inventory-basics-formats-hosts-and-groups
  - group name
https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#assigning-a-variable-to-many-machines-group-variables
  - group variables
https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#default-groups
  - default groups
- workerlar normal'de hosts'a kaydedilir. Daha sonra 
- Yeni acilanlar da eklenir.
- Dynamic inventory:
  * Yeni acilan node'lar hosts file'a otomatik olarak tespit edilerek eklenir.
  * Bir plugin sayesinde tespit edip gunceller. Biz plugin'in ayarlarini Boto ile yapariz.
  * inventory file'da degisiklik olmuyor.
  * AWS consolda verilen taglar ile cekiyor.

!!!
scp -i ~/.ssh/ugur.pem  -o IdentitiesOnly=yes ~/.ssh/ugur.pem  ec2-user@54.227.14.107:/home/ec2-user/.ssh/
!!!
scp -i ~/.ssh/ugur.pem  -o IdentitiesOnly=yes -r ec2-user@54.227.14.107:/home/ec2-user/Ders2 .
  - '-r': folder gondeririz. Ders2 folderi alinir.


2.Hands-on:

VSC-local:
scp -i ~/.ssh/ugur.pem  -o IdentitiesOnly=yes ~/.ssh/ugur.pem  ec2-user@54.227.14.107:/home/ec2-user

VSC:
sudo yum update -y
sudo amazon-linux-extras install ansible2
vim /etc/ansible/hosts
------------------------------------------------------------------
[webservers]
node1 ansible_host=<node1_ip> ansible_user=ec2-user

[dbservers]
node2 ansible_host=<node2_ip> ansible_user=ec2-user

[all:vars]
ansible_ssh_private_key_file=/home/ec2-user/<pem file>
------------------------------------------------------------------
chmod 400 ugur.pem
!!!
ansible all -m ping -o
  - ilgili node'lari inventory/hosts da tanimli isimleriyle getirir.
ansible node1 -m setup

VSC facts:
vim facts.yml
------------------------------------------------------------------
- name: show facts
  hosts: all
  tasks:
    - name: print facts
      debug:
        var: ansible_facts
------------------------------------------------------------------
ansible-playbook facts.yml

VSC debug-ipaddress:
vim ipaddress.yml
------------------------------------------------------------------
- hosts: all
  tasks:
  - name: show IP address
    debug:
      msg: >
       This host uses IP address {{ ansible_facts.default_ipv4.address }}
------------------------------------------------------------------
ansible-playbook ipaddress.yml

VSC vault:
- Secret data icin usuller:
  * encrypted variables olusturma:
  * secret veriyi yeni user olustururken kullanma:
ansible-vault create secret.yml
  - encrypted variables olusturulur.
#1234
#1234
------------------------------------------------------------------
username: tyler
password: 99abcd
------------------------------------------------------------------
  - encrypted variables icin sifreli dosya olusturuldu.
cat secret.yml
  - icinde sifreli bilgi var. Icindeki bilgiler korunuyor.
nano create-user.yml
------------------------------------------------------------
- name: create a user
  hosts: all
  become: true
  vars_files:
    - secret.yml
  tasks:
    - name: creating user
      user:
        name: "{{ username }}"
        password: "{{ password }}"
------------------------------------------------------------
  - 'become: true': sudo
  - username ve password, secret.yml dosyasindan cekilir.
ansible-playbook create-user.yaml
  - ansible volt dosyasi goruyorum. Bunu acmama yardim et.
!!!
ansible-playbook --ask-vault-pass create-user.yml
# 1234
    - sifresini girdik.
    - password'u hashlememisiz.
    - Control consolunda hashli ama ansible ile networkde hashsiz geziyor.
ansible all -b -m command -a "grep tyler /etc/shadow"
  - username ve password'u env'a konfigure edilmis.
  - sifreyi de acik gorebiliyoruz.
ansible node1 -b -a "cat /etc/passwd"
  - buradan username ve password'un workerlarda tanimlanip tanimlanmadigini kontrol ederiz.

VSC vault-SHA:
ansible-vault create secret-1.yaml
#1234
#1234
------------------------------------------------------------
username: Oliver
pwhash: 14abcd
------------------------------------------------------------
cat secret-1.yml
  - sifreli olarak gosteriyor.
!!!
ansible-vault edit secret-1.yml
  - degisiklik yapmaya yarar.
#1234
vim create-user-1.yml
-----------------------------------------------------------------
- name: create a user
  hosts: all
  become: true
  vars_files:
    - secret.yml
  tasks:
    - name: creating user
      user:
        name: "{{ username }}"
        password: "{{ password | password_hash ('sha512') }}"   
-----------------------------------------------------------------
!!!
  - hashliyoruz.
ansible-playbook create-user-1.yaml --ask-vault-pass
  - password hashlanip gonderildi. problem cozuldu. Userlar olusturuldu.
ansible all -b -m command -a "grep tyler /etc/shadow"
  - username ve password veriyor.
ansible all -b -m command -a "grep tyler /etc/passwd"
  - sadece username'i verir.

VSC-worker:
su Oliver
#14abcd
  - sifre girerek user degistirdik.
sudo cat /etc/shadow
  - Oliver'in password'unu hashli digerlerini acik tutmus.
su tyler
sudo su
  - root user'a gectik.

