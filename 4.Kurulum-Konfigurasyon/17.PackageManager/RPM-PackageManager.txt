1.Genel:
https://www.redhat.com/sysadmin/create-rpm-package
https://docs.fedoraproject.org/en-US/packaging-guidelines/RPMMacros/
- RPM, Centos, yum bilgisayarlari icin gecerlidir.
- RedHat VM actim.
- <name>-<version>-<release>.<arch>.rpm



a.Installations:
sudo yum install dnf -y
sudo yum install wget -y
sudo yum install tree -y
sudo dnf install -y rpmdevtools rpmlint
# sudo dnf install -y rpm-build
  - Build icin gerekli.



c.Dosya Yapisi:
rpmdev-setuptree
  - Dosya yapisini home/ec2-user/rpmbuild altinda klasorler seklinde olusturur:
  - BUILD: directory is used during the build process of the RPM package. This is where the temporary files are stored, moved around, etc.
  - RPMS: directory holds RPM packages built for different architectures and noarch if specified in .spec file or during the build.
  - SOURCES directory, as the name implies, holds sources. This can be a simple script, a complex C project that needs to be compiled, a pre-compiled program, etc. Usually, the sources are compressed as .tar.gz or .tgz files.
  - SPECS: directory contains the .spec files. The .spec file defines how a package is built. 
  - SRPMS: directory holds the .src.rpm packages. A Source RPM package doesn't belong to an architecture or distribution. The actual .rpm package build is based on the .src.rpm package.


d.Ornek Binary:
-------------------------------------------------------------------------
cat << EOF >> hello.sh
> #!/bin/bash
> echo "Hello world"
> EOF
-------------------------------------------------------------------------
mkdir hello-0.0.1
mv hello.sh hello-0.0.1
  - Binary, versioning ile isimlendirilmis folder'a tasinir.


e.Sikistirma ve SOURCE'a Tasima:
tar --create --file hello-0.0.1.tar.gz hello-0.0.1
  - Versionlama yapilarak icine binary konulan directory compress edilir.
mv hello-0.0.1.tar.gz /rpmbuild/SOURCES/
  - Compress edilmis binary dosyasi SOURCE altina atilir.


f.Create .spec File and Build:
- An RPM package is defined by a .spec file.
- SPECS altinda olusturulur.
- ".spec" file default olarak software'i build ve compile edecegimizi dusunur.
- bash script oldugu icin build islemine gerek yoktur, cunki compile edilecek code yok.   
cd ~/rpmbuild/SPECS
rpmdev-newspec hello
  - hello.spec olustu. Duzenleyecegiz.
tree ~/rpmbuild
vi hello.spec
---------------------------------------------------------------------------------
Name:           hello
Version:        0.0.1
Release:        1%{?dist}
Summary:        A simple hello world script
BuildArch:      noarch

License:        GPL
Source0:        %{name}-%{version}.tar.gz

Requires:       bash

%description
A demo RPM build

%prep
%setup -q

%install
rm -rf $RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT/%{_bindir}
cp %{name}.sh $RPM_BUILD_ROOT/%{_bindir}

%clean
rm -rf $RPM_BUILD_ROOT

%files
%{_bindir}/%{name}.sh

%changelog
* Man Sep 19 2022 Umit Ceylan <byildiz2019@gmail.com> - 0.0.1
- First version being packaged
---------------------------------------------------------------------------------

f.1.Preample Items:
  - "Name:         hello": .spec file ismi ile uyusmali.
  - "Version:      0.0.1": The package version.
  - "Release:      1%{?dist}": The package version number.
  - "Summary:      yorum": Simple summary of what the package is about.
  - "License:      GPL": The license of the software or package used.
  - "Source0:      %{name}-%{version}.tar.gz": Path or URL to the compressed archive file of the source of RPM.
  - "BuildArch:      noarch": Tum mimarilerde calisabilir. HAngi mimaride calisilacagi belirtilir.
  - "BuildRequires:  ": List of packages or software needed to build the RPM.
  - "Requires:      bash": List of packages or software needed to run the RPM after installing.

f.2:Bodt Items:
  - %description: A simple description of the software packaged in the RPM.
  - %prep: This section contains the script that will first execute during the build process of the RPM.
  - %build: This section is for performing the build.
  - %install: This section is also executed like %prep and %build section and is used for the installation.
  - %files: This section contains the list of files that the package contains.
  - %clean: This section instructs the RPM to clean up any files that are not needed after build.
  - %changelog: A log of changes may happen to the package between different versions and releases.
  - "%{_bindir}": /usr/bin
  - "%{name}": name of the package (as defined in the Name: field)
  - "%{version}": version of the package (as defined in the Version: field)
  - "%{_datadir}": shared data (/usr/sbin by default)
  - "%{_sysconfdir}": configuration directory (/etc by default)
tree ~/rpmbuild
rpm --eval '%{_bindir}'
  - '%{_bindir}': /usr/bin seklinde gosterir.
  - "1%{?dist}": For Release, here 1%{?dist} means if %{dist} is defined, insert its value here. If not, do nothing.
  - This dist tag is known as distro or distribution tag. It means which distro is used for this RPM package creation, like if we build an RPM on CentOS 7 we should get it as .el7.


g.Checking the .spec file on error (rpmlint):
- The rpmlint command can find errors in .spec files.
rpmlint ~/rpmbuild/SPECS/hello.spec
  - Warning verdi Error yok..


h.Building Package (rpmbuild):
rpmbuild -bs ~/rpmbuild/SPECS/hello.spec
  - ".src.rpm" package olusturur.
  - -b: build
  - -s: source
  - rpmbuild/SRPMS/hello-0.0.1-1.el8.src.rpm: olusur.
rpmbuild -bb ~/rpmbuild/SPECS/rm-ssh-offendingkey.spec
  - Binary rpm package olusturur.
  - -b: build
  - -b: binary


i.Installing the RPM package:
sudo dnf install ~/rpmbuild/RPMS/noarch/hello-0.0.1-1.el8.noarch.rpm
  - sudo rpm -ivh ~/rpmbuild/RPMS/noarch/hello-0.0.1-1.el8.noarch.rpm
    - Yukardaki komut ile de build yapilabilir.
rpm -qi hello
  - Verification yapar.
rpm -q hello --changelog
  - The %changelog entry of a package can be viewed.
rpm -ql hello
  - See what’s in the RPM package
  - /usr/bin/hello.sh


j.Removing the RPM package:
sudo dnf remove hello
  - sudo rpm --verbose --erase hello
    - Her iki komutla da silinebilir.





2.Hands-on:

a.Installations:
sudo yum install tree -y
sudo yum install rpm-build
  - dosya yapisini kuran program.


b.Create User:
- root olmayan bir user ile kurmak daha iyi.
sudo useradd rana
  - user olusturduk.
passwd rana
  - sifre olusturduk.
  - /etc/passwd, /etc/shadow, /etc/group ve /etc/gshadow ulasilabilir artik.
su root
chmod 700 /etc/sudoers
vim /etc/sudoers
------------------------------------
root     ALL=(ALL:ALL) ALL
rana     ALL=(ALL:ALL) ALL
------------------------------------
  - ekleriz
usermod -a -G sudo rana
  - rana user'ini sudo group'una ekliyorum. sudo group yoksa olusturulur ve privileges'ler verilir.
  - Yukardaki calismazsa.



c.RPM Dosya Agacini Olusturma:
cd
rpmdev-setuptree
  - /home/rana altinda olusturulur.
ls -R


d.Script:
sudo vi myrpm.sh
----------------------------------------------------------------
#!/bin/bash
echo "Hello world"
----------------------------------------------------------------


e.Versiyonlama Folderi Olusturup Binary'i Sikistirarak Icine Atip /rpmbuild/SOURCE Icine Atma:
- Compile gerektirseydi build yapilip compile edilmis binary'si konulurdu.
mkdir myrpm-0.0.1
  - Versiyonlama folderi olusturduk.
mv myrpm.sh myrpm-0.0.1
  - Binary'i icine attik.
tar -cvzf myrpm-0.0.1.tar.gz  myrpm-0.0.1/
  - Versiyonlama dosyasini sikistirdik.
mv myrpm-0.0.1.tar.gz rpmbuild/SOURCES/
  - Sikistirilmis versiyonlama dosyasini rpmbuild/SOURCES/ dosyasina attik.
ls -R rpmbuild/


f.".spec" File Olusturma:
rpmdev-newspec myrpm
  - "myrpm.spec" olustu.
mv myrpm.spec ~/rpmbuild/SPECS/.
  - SPECS altina .spec file'i gonderdik.
vi rpmbuild/SPECS/myrpm.spec
------------------------------------------------------------------------
Name:           myrpm
Version:        0.0.1
Release:        1%{?dist}
Summary:        My first rpm

License:        GPL
Source0:        %{name}-%{version}.tar.gz

Requires:       bash

%description    
My first rpm which is hello world script

%prep
%setup  -q

%install
rm -rf $RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT/%{_bindir}
cp %{name}.sh ${RPM_BUILD_ROOT}/%{_bindir}

%clean
rm -rf $RPM_BUILD_ROOT

%files
%{_bindir}/%{name}.sh

%changelog
* Tue Sep 20 2022 rana
-0.0.1 first version
------------------------------------------------------------------------
  - "%" ile baslayan makrolari "https://docs.fedoraproject.org/en-US/packaging-guidelines/RPMMacros/" sayfasindan doldurmak sistemi daha robust yapar. 
  - "%install" altinda once eski directory varsa silinir. Sonra yeni directory olusturulur. 
  - "%{_bindir}": /usr/bin adresini ekler. .sh dosyasini buraya kopyalariz.
rpm – eval '%{_bindir}'
  - if I want to see what the %{_bindir} contains.
  - rpm - eval <macro>



g.".spec" File'i Validate Etme:
rpmlint rpmbuild/SPECS/myrpm.spec
  - Error'lar duzeltilir.


h.Package Olusturma:
- Asagidaki uc koddan biri ile yapilabilir.
rpmbuild -bs rpmbuild/SPECS/myrpm.spec
  - We first create the source RPM.
  - ~/rpmbuild/SRPMS/myrpm-0.0.1-1.el8.src.rpm" olustu.
  - "-b": is for build
  - "-s": is for source.
rpmbuild -bb rpmbuild/SPECS/myrpm.spec
  - We can create the binary RPM
  - "-b": is for build.
  - "-a": is for all.
rpmbuild -ba rpmbuild/SPECS/myrpm.spec
  - Hem source ve spec olusturur hem de binary olusturur.
  - "-b": is for build.
  - "-a": is for all.
tree rpmbuild


h.Installing RPM Package:
cd
chmod -R 777 rpmbuild
sudo rpm -ivh rpmbuild/RPMS/x86_64/myrpm-0.0.1-1.el8.x86_64.rpm
  - "yum install rpmbuild/RPMS/x86_64/myrpm-0.0.1-1.el8.x86_64.rpm" ile de yuklenebilir.
rpm -qa myrpm
  - Yuklenip yukølenmedigini kontrol ederiz.
rpm -qi myrpm
  - Bilgi verir.
rpm -ql myrpm
  - binary dosyasini gosterir.


i.Removing RPM Package:
rpm -Ve myrpm
  - "yum remove myrpm"



























